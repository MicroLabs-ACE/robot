{"ast":null,"code":"var _jsxFileName = \"/home/victor/Documents/Programming/Hardware Engineering/robot/robot-web-application/src/Map.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// import MapGraph from \"./mapGraph\";\n\nfunction Map() {\n  const lengthAndWidth = /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"length\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Width:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n  const mapArea = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"500px\",\n      height: \"500px\",\n      backgroundColor: \"lightgray\"\n    },\n    children: circles.map((circle, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50px\",\n        height: \"50px\",\n        backgroundColor: \"blue\",\n        borderRadius: \"50%\",\n        position: \"absolute\",\n        top: `${Math.floor(index / Math.sqrt(circles.length)) * 60}px`,\n        left: `${index % Math.sqrt(circles.length) * 60}px`\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [lengthAndWidth, \" \", mapArea]\n  }, void 0, true);\n}\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["Map","lengthAndWidth","_jsxDEV","children","type","name","fileName","_jsxFileName","lineNumber","columnNumber","value","mapArea","style","width","height","backgroundColor","circles","map","circle","index","borderRadius","position","top","Math","floor","sqrt","length","left","_Fragment","_c","$RefreshReg$"],"sources":["/home/victor/Documents/Programming/Hardware Engineering/robot/robot-web-application/src/Map.js"],"sourcesContent":["// import MapGraph from \"./mapGraph\";\n\nfunction Map() {\n  const lengthAndWidth = (\n    <form>\n      <label>\n        Length:\n        <input type=\"number\" name=\"length\" />\n      </label>\n      <label>\n        Width:\n        <input type=\"number\" name=\"width\" />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n\n  const mapArea = (\n    <div\n      style={{ width: \"500px\", height: \"500px\", backgroundColor: \"lightgray\" }}\n    >\n      {circles.map((circle, index) => (\n        <div\n          key={index}\n          style={{\n            width: \"50px\",\n            height: \"50px\",\n            backgroundColor: \"blue\",\n            borderRadius: \"50%\",\n            position: \"absolute\",\n            top: `${Math.floor(index / Math.sqrt(circles.length)) * 60}px`,\n            left: `${(index % Math.sqrt(circles.length)) * 60}px`,\n          }}\n        ></div>\n      ))}\n    </div>\n  );\n\n  return (\n    <>\n      {lengthAndWidth} {mapArea}\n    </>\n  );\n}\n\nexport default Map;\n"],"mappings":";;AAAA;;AAEA,SAASA,GAAGA,CAAA,EAAG;EACb,MAAMC,cAAc,gBAClBC,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAAC,QAAA,GAAO,SAEL,eAAAD,OAAA;QAAOE,IAAI,EAAC,QAAQ;QAACC,IAAI,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACRP,OAAA;MAAAC,QAAA,GAAO,QAEL,eAAAD,OAAA;QAAOE,IAAI,EAAC,QAAQ;QAACC,IAAI,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACRP,OAAA;MAAOE,IAAI,EAAC,QAAQ;MAACM,KAAK,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CACP;EAED,MAAME,OAAO,gBACXT,OAAA;IACEU,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEC,eAAe,EAAE;IAAY,CAAE;IAAAZ,QAAA,EAExEa,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBjB,OAAA;MAEEU,KAAK,EAAE;QACLC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,eAAe,EAAE,MAAM;QACvBK,YAAY,EAAE,KAAK;QACnBC,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,GAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,GAAGI,IAAI,CAACE,IAAI,CAACT,OAAO,CAACU,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI;QAC9DC,IAAI,EAAE,GAAIR,KAAK,GAAGI,IAAI,CAACE,IAAI,CAACT,OAAO,CAACU,MAAM,CAAC,GAAI,EAAE;MACnD;IAAE,GATGP,KAAK;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUN,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CACN;EAED,oBACEP,OAAA,CAAA0B,SAAA;IAAAzB,QAAA,GACGF,cAAc,EAAC,GAAC,EAACU,OAAO;EAAA,eACzB,CAAC;AAEP;AAACkB,EAAA,GAzCQ7B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}