{"ast":null,"code":"var _jsxFileName = \"/home/victor/Documents/Programming/Hardware Engineering/robot/robot-web-application/src/GearSystem.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GearSystem(props) {\n  _s();\n  const {\n    numberOfGearLevels\n  } = props;\n  const midGear = Math.ceil(numberOfGearLevels / 2);\n  const [currentGear, setCurrentGear] = useState(midGear);\n  const handleClick = event => {\n    const newGear = Number(event.target.textContent);\n    setCurrentGear(newGear);\n    alert(`Changing to gear ${newGear}`);\n  };\n  const gearLevels = Array.from({\n    length: numberOfGearLevels\n  }, (_, i) => i + 1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: gearLevels.map(gearNumber => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      style: {\n        backgroundColor: gearNumber === currentGear ? \"lightblue\" : \"white\"\n      },\n      children: gearNumber\n    }, gearNumber, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(GearSystem, \"WwTfLtiwD5qgVuoc6t0v5Qo7X9o=\");\n_c = GearSystem;\nexport default GearSystem;\nvar _c;\n$RefreshReg$(_c, \"GearSystem\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","GearSystem","props","_s","numberOfGearLevels","midGear","Math","ceil","currentGear","setCurrentGear","handleClick","event","newGear","Number","target","textContent","alert","gearLevels","Array","from","length","_","i","children","map","gearNumber","onClick","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/victor/Documents/Programming/Hardware Engineering/robot/robot-web-application/src/GearSystem.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction GearSystem(props) {\n  const { numberOfGearLevels } = props;\n  const midGear = Math.ceil(numberOfGearLevels / 2);\n  const [currentGear, setCurrentGear] = useState(midGear);\n\n  const handleClick = (event) => {\n    const newGear = Number(event.target.textContent);\n    setCurrentGear(newGear);\n    alert(`Changing to gear ${newGear}`);\n  };\n\n  const gearLevels = Array.from({ length: numberOfGearLevels }, (_, i) => i + 1);\n\n  return (\n    <>\n      {gearLevels.map((gearNumber) => (\n        <button\n          key={gearNumber}\n          onClick={handleClick}\n          style={{ backgroundColor: gearNumber === currentGear ? \"lightblue\" : \"white\" }}\n        >\n          {gearNumber}\n        </button>\n      ))}\n    </>\n  );\n}\n\nexport default GearSystem;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAmB,CAAC,GAAGF,KAAK;EACpC,MAAMG,OAAO,GAAGC,IAAI,CAACC,IAAI,CAACH,kBAAkB,GAAG,CAAC,CAAC;EACjD,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAACS,OAAO,CAAC;EAEvD,MAAMK,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,OAAO,GAAGC,MAAM,CAACF,KAAK,CAACG,MAAM,CAACC,WAAW,CAAC;IAChDN,cAAc,CAACG,OAAO,CAAC;IACvBI,KAAK,CAAC,oBAAoBJ,OAAO,EAAE,CAAC;EACtC,CAAC;EAED,MAAMK,UAAU,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEhB;EAAmB,CAAC,EAAE,CAACiB,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;EAE9E,oBACExB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,EACGN,UAAU,CAACO,GAAG,CAAEC,UAAU,iBACzB3B,OAAA;MAEE4B,OAAO,EAAEhB,WAAY;MACrBiB,KAAK,EAAE;QAAEC,eAAe,EAAEH,UAAU,KAAKjB,WAAW,GAAG,WAAW,GAAG;MAAQ,CAAE;MAAAe,QAAA,EAE9EE;IAAU,GAJNA,UAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKT,CACT;EAAC,gBACF,CAAC;AAEP;AAAC7B,EAAA,CA1BQF,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AA4BnB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}